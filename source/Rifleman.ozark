class Rifleman
	inheritance Soldier source:"Soldier"

	requirement StandardIO reference:"StandardIO"
	requirement Gun source:"Gun"
	requirement Bullet.Casing source:"Bullet"
	requirement Smoke source:"Smoke"
	requirement Target source:"Target"
	requirement Mood source:"Mood"
	requirement Hat source:"Hat"

	class ShootAbility
		inheritance Ability source:"Ability"

		requirement Gun source:"Gun"
		requirement Target source:"Target"
		requirement Bullet.Casing source:"Bullet"
		requirement Smoke source:"Smoke"

		enumeration SkillLevel
			state novice
			state intermediate
			state expert

		SkillLevel skill

		continuation initialize (skill:SkillLevel)
			set my skill <- skill

		method fireGunAtTarget gun:Gun target:Target -> casing:Bullet.Casing smoke:Smoke
			gun shootAtTarget target -> casing:casing1 smoke:smoke1
			set casing <- casing1
			set smoke <- smoke1

	class CelebrateAbility
		inheritance Ability source:"Ability"

		requirement StandardIO reference:"StandardIO"
		requirement Hat source:"Hat"

		class HatTipAbility
			inheritance Ability source:"Ability"

			requirement Hat source:"Hat"

			method tipHat input:Hat
				input getTipped

		StandardIO io
		HatTipAbility hatTipper

		continuation initialize
			my io initialize
			my hatTipper initialize

		continuation initialize +io:StandardIO
			set my io <- io
			my hatTipper initialize

		method showOffForTheCrowd hat:Hat
			hatTipper tipHat:hat
			io print "Hello, ladies."

	StandardIO io
	ShootAbility shooter
	CelebrateAbility celebrator
	Mood mood
	Gun gun
	Hat hat
	[[String]] fieldGuides

	continuation initialize
		StandardIO io initialize
		ShootAbility shooter initialize
		CelebrateAbility celebrator initialize io:io
		Gun gun initialize
		Hat hat initialize
		set my io <- io
		set my shooter <- shooter
		set my celebrator <- celebrator
		set my mood <- Mood.happy
		set my gun <- gun
		set my hat <- hat

	continuation initialize +io:StandardIO
		ShootAbility shooter initialize
		CelebrateAbility celebrator initialize io:io
		Gun gun initialize
		Hat hat initialize
		set my io <- io
		set my shooter <- shooter
		set my celebrator <- celebrator
		set my mood <- Mood.happy
		set my gun <- gun
		set my hat <- hat

	method shootEveryOtherTarget input:[Target] -> casings:[Bullet.Casing] smoke:Smoke success:Boolean
		[Bullet.Casing] theCasings initialize
		Smoke theSmoke initialize
		[Boolean] successes initialize

		input oddItems -> oddItems1

		each oddItems1 -> item
			shooter shootAtTarget item -> success:success
			successes push success

		successes all:true -> all

		if (all)
			my celebrator showOffForTheCrowd hat:my hat
			set my mood <- Mood.happy

		set casings <- theCasings
		set smoke <- theSmoke
		set success <- all