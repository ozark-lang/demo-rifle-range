inheritance Soldier

requirement StandardIO
requirement Gun
requirement Bullet.Casing
requirement Smoke
requirement Target
requirement Mood
requirement Hat

class ShootAbility
	inheritance Ability

	requirement Gun
	requirement Target
	requirement Bullet.Casing
	requirement Smoke

	enumeration SkillLevel
		state novice
		state intermediate
		state expert

	property @skill:SkillLevel

	extension initialize
		create skill:SkillLevel; initialize SkillLevel.novice
		
		assign @skill <- skill

	extension initialize !skill:SkillLevel
		assign @skill <- skill

	method fireGun gun:Gun target:Target -> casing:Bullet.Casing smoke:Smoke
		gun shoot target -> casing:casing1 smoke:smoke1

		assign casing <- casing1
		assign smoke <- smoke1

class CelebrateAbility
	inheritance Ability

	requirement StandardIO
	requirement Hat

	class HatTipAbility
		inheritance Ability

		requirement Hat

		method tipHat $hat:Hat
			hat getTipped

	property @io:StandardIO
	property @hatTipper:HatTipAbility

	extension initialize
		create io:StandardIO; initialize 
		create hatTipper:HatTipAbility; initialize

		assign @io <- io
		assign @hatTipper <- hatTipper

	extension initialize !io:StandardIO
		create hatTipper:HatTipAbility; initialize

		assign @io <- io
		assign @hatTipper <- hatTipper

	method showOffForTheCrowd hat:Hat
		@hatTipper tipHat hat
		@io print "Hello, ladies."

property @io:StandardIO
property @shooter:ShootAbility
property @celebrator:CelebrateAbility
property @gun:Gun
property @hat:Hat
property @mood:Mood

extension initialize
	create io:StandardIO; initialize
	create shooter:ShootAbility; initialize
	create celebrator:CelebrateAbility; initialize io:io
	create mood:Mood; initialize Mood.happy
	create gun:Gun; initialize
	create hat:Hat; initialize

	assign @io <- io
	assign @shooter <- shooter
	assign @celebrator <- celebrator
	assign @mood <- mood
	assign @gun <- gun
	assign @hat <- hat

extension initialize !io:StandardIO
	create shooter:ShootAbility; initialize
	create celebrator:CelebrateAbility; initialize io:io
	create mood:Mood; initialize Mood.happy
	create gun:Gun; initialize
	create hat:Hat; initialize

	assign @io <- io
	assign @shooter <- shooter
	assign @celebrator <- celebrator
	assign @mood <- mood
	assign @gun <- gun
	assign @hat <- hat

method shootEveryOtherTarget $targets:[Target] -> casings:[Bullet.Casing] smoke:Smoke success:Boolean
	create theSmoke:Smoke; initialize
	create wasSuccessful:Boolean; initialize true
	create bulletCasings:[Bullet.Casing]; initialize []

	for target:targets
		shooter shootTarget target -> success:success1 casing:casing1 smoke:smoke1
		wasSuccessful and success1
		theSmoke add smoke1
		bulletCasings append casing1

	if wasSuccessful
		@celebrator showOffForTheCrowd hat:@hat
		@mood set Mood.happy

	assign casings <- bulletCasings
	assign smoke <- theSmoke
	assign success <- wasSuccessful